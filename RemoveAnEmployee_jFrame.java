import java.awt.Dimension;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import java.util.regex.Pattern;
import java.util.regex.Matcher;


public class RemoveAnEmployee_jFrame extends javax.swing.JFrame {

    private MyHashTable mainHT;  // This contains the ref value for theHT of MainJFrame.
    
    //Creates new form RemoveAnEmployee_jFrame
    public RemoveAnEmployee_jFrame() {
        initComponents();
        employeeList.setVisible(false);
        employeeListScrollPane.setVisible(false);
        empNumText.setVisible(false);
        removeEmployeePromptLabel.setVisible(false);
        removeEmployeeButton.setVisible(false);
        pack();
    }
    
    public void setMainHT(MyHashTable theRefVal) {
        mainHT = theRefVal;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        removeEmployeePromptLabel = new javax.swing.JLabel();
        empNumText = new javax.swing.JTextField();
        removeEmployeeButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        removeMethodLabel = new javax.swing.JLabel();
        employeeNumberSearchButton = new javax.swing.JRadioButton();
        employeeListButton = new javax.swing.JRadioButton();
        employeesPanel = new javax.swing.JPanel();
        employeeListScrollPane = new javax.swing.JScrollPane();
        employeeList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        removeEmployeePromptLabel.setText("Prompt to user");

        removeEmployeeButton.setText("Remove");
        removeEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAnEmployee(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitRemoveAnEmployee(evt);
            }
        });

        removeMethodLabel.setText("Would you like to find the employee to remove by searching for them using their employee number, or scrolling through a list of all the employees?");

        buttonGroup1.add(employeeNumberSearchButton);
        employeeNumberSearchButton.setText("Employee Number Search");
        employeeNumberSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empNumOptionPressed(evt);
            }
        });

        buttonGroup1.add(employeeListButton);
        employeeListButton.setText("List of Employees");
        employeeListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empListOptionPressed(evt);
            }
        });

        employeeListScrollPane.setViewportView(employeeList);

        javax.swing.GroupLayout employeesPanelLayout = new javax.swing.GroupLayout(employeesPanel);
        employeesPanel.setLayout(employeesPanelLayout);
        employeesPanelLayout.setHorizontalGroup(
            employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(employeeListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
        );
        employeesPanelLayout.setVerticalGroup(
            employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employeesPanelLayout.createSequentialGroup()
                .addComponent(employeeListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeEmployeeButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(employeesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(empNumText, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(removeMethodLabel)
                    .addComponent(removeEmployeePromptLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(employeeNumberSearchButton)
                        .addGap(27, 27, 27)
                        .addComponent(employeeListButton)
                        .addGap(44, 44, 44)
                        .addComponent(exitButton)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(removeMethodLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeNumberSearchButton)
                    .addComponent(employeeListButton)
                    .addComponent(exitButton))
                .addGap(18, 18, 18)
                .addComponent(removeEmployeePromptLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(empNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(removeEmployeeButton)
                .addContainerGap(176, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /* Triggered when the "Remove" button is pressed. Removes the chosen employee(s) from
       the hash table */
    private void removeAnEmployee(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAnEmployee
        // TODO add your handling code here:
        
        if (employeeNumberSearchButton.isSelected()) {
            
            if (!empNumText.getText().isEmpty()) {

                try {
                    
                    int theEmpNum = Integer.parseInt(empNumText.getText());
                    
                    EmployeeInfo removedEmp = mainHT.removeEmployee(theEmpNum);

                    if (removedEmp != null) {
                        
                        JOptionPane.showMessageDialog(this, "The employee has been "
                        + "removed from the system", "Employee Removed Successfully",
                        JOptionPane.PLAIN_MESSAGE);
                        
                        empNumText.setText("");
                        empNumText.setVisible(false);
                        removeEmployeeButton.setVisible(false);
                        removeEmployeePromptLabel.setVisible(false);
                        buttonGroup1.clearSelection();
                    } 
                    
                    else {
                        
                        JOptionPane.showMessageDialog(this, "That employee number is"
                        + " not in the database. Please make sure no typos were made",
                        "Employee Number Not Found", JOptionPane.WARNING_MESSAGE);
                    }
                }
                
                catch (NumberFormatException e) {
                    
                    JOptionPane.showMessageDialog(this, "The employee number"
                    + " must be 6 digits!", "Invalid Employee Number",
                    JOptionPane.WARNING_MESSAGE);                

                }
            }
        }
        
        else if (employeeListButton.isSelected()) {
            
            List selectedEmployees = employeeList.getSelectedValuesList();
            
            if (!selectedEmployees.isEmpty()) {
                
                for (int i = 0; i < selectedEmployees.size(); i++) {

                    String currentEmployee = (String) selectedEmployees.get(i);
                    
                    Pattern pattern = Pattern.compile("[0-9]{6}");
                    Matcher matcher = pattern.matcher(currentEmployee);
                    matcher.find();
                    int theEmpNum = Integer.parseInt(currentEmployee.substring(matcher.start(), matcher.end()));
                    EmployeeInfo removedEmp = mainHT.removeEmployee(theEmpNum);
                }
                
                if (selectedEmployees.size() == 1) {
                    
                    JOptionPane.showMessageDialog(this, "The employee has been "
                    + "removed from the system", "Employee Removed Successfully", 
                    JOptionPane.PLAIN_MESSAGE);
                }
                
                else {
                    
                    JOptionPane.showMessageDialog(this, "The employees have been "
                    + "removed from the system", "Employees Removed Successfully",
                    JOptionPane.PLAIN_MESSAGE);
                }
                
                employeeList.setVisible(false);
                removeEmployeeButton.setVisible(false);
                removeEmployeePromptLabel.setVisible(false);
                employeeListScrollPane.setVisible(false);
                buttonGroup1.clearSelection();
            }
        }
        
        else {
            
            JOptionPane.showMessageDialog(this, "Please choose a method to" +
            " find the employee(s) you want to remove!", "Choose Search Method",
            JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_removeAnEmployee

    // Triggered when the "Exit" button is pressed. Closes the JFrame.
    private void exitRemoveAnEmployee(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitRemoveAnEmployee
        // TODO add your handling code here:
        this.dispose(); // Make this window disappear
    }//GEN-LAST:event_exitRemoveAnEmployee

    // Sets up a JTextField where the user can input an employee number in order to identify an employee to remove
    private void empNumOptionPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empNumOptionPressed
        // TODO add your handling code here:
        
        if (mainHT.totalEmployeeCount > 0) {
           
            removeEmployeePromptLabel.setText("Enter the employee number of the employee you want to remove: ");
            removeEmployeePromptLabel.setVisible(true);
            empNumText.setVisible(true);
            removeEmployeeButton.setVisible(true);
            employeeList.setVisible(false);
            employeeListScrollPane.setVisible(false);
        }
        
        else {
            
            employeeList.setVisible(false);
            removeEmployeeButton.setVisible(false);
            removeEmployeePromptLabel.setVisible(false);
            employeeListScrollPane.setVisible(false);
            empNumText.setVisible(false);
            buttonGroup1.clearSelection();
            JOptionPane.showMessageDialog(this, "There are no employees in the system!",
            "No Employees", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_empNumOptionPressed

    // Creates a JList with all the employees in the system
    private void empListOptionPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empListOptionPressed
        // TODO add your handling code here:

        DefaultListModel<String> listModel = new DefaultListModel<>();
        
        if (mainHT.totalEmployeeCount > 0) {

            for (int i = 0; i < mainHT.buckets.length; i++) {
                for (int j = 0; j < mainHT.buckets[i].size(); j++) {

                    EmployeeInfo theEmp = mainHT.buckets[i].get(j);
                    listModel.addElement(theEmp.firstName + " " + theEmp.lastName
                    + " (" + (theEmp.empNum) + ")");
                }
            }
            
            employeeList.setModel(listModel);
            employeeList.setVisible(true);
            employeeListScrollPane.setVisible(true);
            removeEmployeeButton.setVisible(true);
            empNumText.setVisible(false);
            removeEmployeePromptLabel.setText("Select the employee you want to remove from the list: ");
            removeEmployeePromptLabel.setVisible(true);
        } 
        
        else {
            
            empNumText.setVisible(false);
            employeeList.setVisible(false);
            employeeListScrollPane.setVisible(false);
            removeEmployeeButton.setVisible(false);
            removeEmployeePromptLabel.setVisible(false);
            buttonGroup1.clearSelection();
            JOptionPane.showMessageDialog(this, "There are no employees in the system!",
            "Employee Removed Successfully", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_empListOptionPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveAnEmployee_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveAnEmployee_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveAnEmployee_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveAnEmployee_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoveAnEmployee_jFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField empNumText;
    private javax.swing.JList<String> employeeList;
    private javax.swing.JRadioButton employeeListButton;
    private javax.swing.JScrollPane employeeListScrollPane;
    private javax.swing.JRadioButton employeeNumberSearchButton;
    private javax.swing.JPanel employeesPanel;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton removeEmployeeButton;
    private javax.swing.JLabel removeEmployeePromptLabel;
    private javax.swing.JLabel removeMethodLabel;
    // End of variables declaration//GEN-END:variables
}
