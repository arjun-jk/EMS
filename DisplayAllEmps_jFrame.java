import java.awt.Dimension;
import java.text.DecimalFormat;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.table.*;

public class DisplayAllEmps_jFrame extends javax.swing.JFrame {
    
    
    // ATTRIBUTES
    
    private MyHashTable mainHT;  // This contains the ref value for theHT of MainJFrame.
    private DefaultTableModel model;
    private final ButtonGroup group = new ButtonGroup();
    private static final DecimalFormat currency = new DecimalFormat("0.00");

    
    // CONSTRUCTORS

    //Creates new form DisplayAllEmps_jFrame
    public DisplayAllEmps_jFrame() {
        initComponents();
        employeeTable.setVisible(false);
        employeeScrollPane.setVisible(false);
        dividerLabel.setVisible(false);
        
    }
    
    
    // METHODS    

    
    public void setMainHT(MyHashTable refvalForHT) {
        mainHT = refvalForHT;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employeeCountLabel = new javax.swing.JLabel();
        displayEmployeesLabel = new javax.swing.JLabel();
        partTimeEmployeesButton = new javax.swing.JRadioButton();
        fullTimeEmployeesButton = new javax.swing.JRadioButton();
        dividerLabel = new javax.swing.JLabel();
        allEmployeesButton = new javax.swing.JRadioButton();
        displayEmployeesButton = new javax.swing.JButton();
        exitDisplayEmployees = new javax.swing.JButton();
        employeesPanel = new javax.swing.JPanel();
        employeeScrollPane = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        employeeCountLabel.setText("There are currently ");
        employeeCountLabel.setVisible(false);

        displayEmployeesLabel.setText("Choose the employees that you want displayed below: ");

        group.add(partTimeEmployeesButton);
        partTimeEmployeesButton.setText("Part Time Employees");

        group.add(fullTimeEmployeesButton);
        fullTimeEmployeesButton.setText("Full Time Employees");

        dividerLabel.setText("——————————————————————————————————————————");

        group.add(allEmployeesButton);
        allEmployeesButton.setText("All Employees");

        displayEmployeesButton.setText("Display!");
        displayEmployeesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayEmployees(evt);
            }
        });

        exitDisplayEmployees.setText("Exit");
        exitDisplayEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitDisplayEmployees(evt);
            }
        });

        employeeScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        employeeTable.setAutoCreateColumnsFromModel(true);
        model = new DefaultTableModel(new Object[] {"Status",
            "Employee Number",
            "First Name",
            "Last Name",
            "Annual Net Income"},
        0);
    employeeTable.setModel(model);
    employeeTable.getColumnModel().getColumn(0).setPreferredWidth(75);
    employeeTable.getColumnModel().getColumn(1).setPreferredWidth(120);
    employeeTable.getColumnModel().getColumn(2).setPreferredWidth(75);
    employeeTable.getColumnModel().getColumn(3).setPreferredWidth(80);
    employeeTable.getColumnModel().getColumn(4).setPreferredWidth(120);
    employeeTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    employeeTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    employeeTable.setEnabled(false);
    employeeTable.setFillsViewportHeight(true);
    employeeTable.setRowHeight(25);
    employeeTable.setShowGrid(true);
    employeeTable.getTableHeader().setResizingAllowed(false);
    employeeTable.getTableHeader().setReorderingAllowed(false);
    employeeScrollPane.setViewportView(employeeTable);

    javax.swing.GroupLayout employeesPanelLayout = new javax.swing.GroupLayout(employeesPanel);
    employeesPanel.setLayout(employeesPanelLayout);
    employeesPanelLayout.setHorizontalGroup(
        employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employeesPanelLayout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(employeeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    employeesPanelLayout.setVerticalGroup(
        employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employeesPanelLayout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(employeeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(37, 37, 37)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(displayEmployeesButton)
                    .addGap(18, 18, 18)
                    .addComponent(exitDisplayEmployees))
                .addComponent(allEmployeesButton)
                .addComponent(fullTimeEmployeesButton)
                .addComponent(partTimeEmployeesButton)
                .addComponent(displayEmployeesLabel)
                .addComponent(employeesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(employeeCountLabel)
                .addComponent(dividerLabel))
            .addContainerGap(30, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(30, 30, 30)
            .addComponent(displayEmployeesLabel)
            .addGap(18, 18, 18)
            .addComponent(partTimeEmployeesButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(fullTimeEmployeesButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(allEmployeesButton)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(displayEmployeesButton)
                .addComponent(exitDisplayEmployees))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(dividerLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(employeeCountLabel)
            .addGap(18, 18, 18)
            .addComponent(employeesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(44, Short.MAX_VALUE))
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /* Triggered when the "Display!" button is pressed. Displays the employees (under the filter chosen)
       and their info in a table format */
    private void displayEmployees(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayEmployees
        // TODO add your handling code here:
        
        employeesPanel.setPreferredSize(new Dimension(470, 150));
        model.setRowCount(0);
        
        employeeTable.setVisible(true);
        employeeScrollPane.setVisible(true);
        
        int empCount;
        
        if (partTimeEmployeesButton.isSelected()) {
            empCount = mainHT.pTEmployeeCount;
            employeeCountLabel.setText("The part-time employee count is currently " + (empCount) + ".");
        }
        
        else if (fullTimeEmployeesButton.isSelected()) {
            empCount = mainHT.fTEmployeeCount;
            employeeCountLabel.setText("The full-time employee count is currently " + (empCount) + ".");
        }
        
        else if (allEmployeesButton.isSelected()) {
            empCount = mainHT.totalEmployeeCount;
            employeeCountLabel.setText("The current employee count is " + (empCount) + ".");
        }
        
        else {
            return;
        }
        
        if (empCount > 0) {
            
            dividerLabel.setVisible(true);
            employeeTable.setVisible(true);
            employeeScrollPane.setVisible(true);
            employeesPanel.setVisible(true);
            employeeCountLabel.setVisible(true);
            
            for (int i = 0; i < mainHT.buckets.length; i++) {
                for (int j = 0; j < mainHT.buckets[i].size(); j++) {

                    EmployeeInfo theEmp = mainHT.buckets[i].get(j);
                    
                    if (((partTimeEmployeesButton.isSelected() || allEmployeesButton.isSelected()) &&
                       (mainHT.buckets[i].get(j) instanceof PTE))) {

                        PTE PTEmp = (PTE) theEmp;
                        String netAnnualIncome = "$" + currency.format(PTEmp.calcNetAnnualIncome());
                        
                        model.insertRow(model.getRowCount(), new Object[] {"Part Time", theEmp.empNum,
                        theEmp.firstName, theEmp.lastName, netAnnualIncome});
                        
                    }

                    else if (((fullTimeEmployeesButton.isSelected() || allEmployeesButton.isSelected()) &&
                            (mainHT.buckets[i].get(j) instanceof FTE))) {

                        FTE FTEmp = (FTE) theEmp;
                        String netAnnualIncome = "$" + currency.format(FTEmp.calcNetAnnualIncome());
                        
                        model.insertRow(model.getRowCount(), new Object[] {"Full Time", theEmp.empNum,
                        theEmp.firstName, theEmp.lastName, netAnnualIncome});
                    }
                }
            }
            
            employeeCountLabel.setVisible(true);
            
            if (empCount <= 5) {
                
                employeesPanel.setPreferredSize(new Dimension(470, 25 * (empCount + 1)));
            }

        }
            
        else {
            dividerLabel.setVisible(false);
            employeeTable.setVisible(false);
            employeeScrollPane.setVisible(false);
            employeesPanel.setVisible(false);
            employeeCountLabel.setVisible(false);
            JOptionPane.showMessageDialog(this, "There are no employees (under your chosen filter) "
            + "in the system!", "No Employees", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_displayEmployees

    // Triggered when the "Exit" button is pressed. Closes the JFrame.
    private void exitDisplayEmployees(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitDisplayEmployees
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitDisplayEmployees

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayAllEmps_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayAllEmps_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayAllEmps_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayAllEmps_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayAllEmps_jFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allEmployeesButton;
    private javax.swing.JButton displayEmployeesButton;
    private javax.swing.JLabel displayEmployeesLabel;
    private javax.swing.JLabel dividerLabel;
    private javax.swing.JLabel employeeCountLabel;
    private javax.swing.JScrollPane employeeScrollPane;
    private javax.swing.JTable employeeTable;
    private javax.swing.JPanel employeesPanel;
    private javax.swing.JButton exitDisplayEmployees;
    private javax.swing.JRadioButton fullTimeEmployeesButton;
    private javax.swing.JRadioButton partTimeEmployeesButton;
    // End of variables declaration//GEN-END:variables
}